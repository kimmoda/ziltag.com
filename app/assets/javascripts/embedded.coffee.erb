Factory =
  style: () ->
    _style = document.createElement('style')
    _style.textContent = '<%= Rails.application.assets['embedded.css'].source %>'
    _style
  shadow: () ->
    _shadow = document.createElement 'div'
    _shadow.id = 'ziltag_shadow'
    _shadow
  modal: () ->
    _modal = document.createElement 'div'
    _modal.id = 'ziltag_modal'
    _modal.spinner = @spinner()
    _modal.frame = @frame()
    _modal.appendChild _modal.spinner
    _modal.appendChild _modal.frame
    _modal
  frame: () ->
    _frame = document.createElement 'iframe'
    _frame.id = 'ziltag_frame'
    _frame.addEventListener 'load', () -> this.style.display = 'initial'
    _frame
  spinner: () ->
    _spinner = document.createElement 'div'
    _spinner.id = 'ziltag_spinner'
    _spinner.appendChild document.createElement('div')
    _spinner.appendChild document.createElement('div')
    _spinner
  tag: (data) ->
    _tag = document.createElement('div')
    _tag.className = 'ziltag_tag'
    _tag.dataset.x = data.x
    _tag.dataset.y = data.y
    _tag.dataset.link = data.link
    _tag

class Photo
  constructor: (@image, @ziltaggings) ->
  render: () ->
    rect = @image.getBoundingClientRect()
    ratio_x = @image.clientWidth / @image.naturalWidth
    ratio_y = @image.clientHeight / @image.naturalHeight
    for tag in @ziltaggings
      tag.style.left = window.scrollX + rect.left + tag.dataset.x * ratio_x + 'px'
      tag.style.top = window.scrollY + rect.top + tag.dataset.y * ratio_y + 'px'

photos = []
style = Factory.style()
shadow = Factory.shadow()
modal = Factory.modal()
spinner = modal.spinner
frame = modal.frame
frag = document.createDocumentFragment()

open = (link) ->
  shadow.style.opacity = 0.5;
  shadow.style.pointerEvents = 'initial'
  modal.style.left = '20%'
  frame.src = link

close = () ->
  shadow.style.opacity = ''
  shadow.style.pointerEvents = ''
  modal.style.left = ''

render = () ->
  photo.render() for photo in photos

frag.appendChild style
frag.appendChild shadow
frag.appendChild modal

modal.addEventListener 'transitionend', (e) -> frame.style.display = '' if this.style.left == ''
shadow.addEventListener 'click', close

images = {}
images[image.src] = image for image in document.getElementsByTagName('img')
image_urls = Object.keys(images)
request = new XMLHttpRequest()
params = (encodeURIComponent(url) for url in image_urls).join('&q[]=')
request.open('GET', '<%= ::Rails.application.routes.url_helpers.embedded_photos_url(host: (Rails.env.production? ? Settings.host : 'localhost:3000'), format: :json) %>?q[]=' + params)

request.onload = () ->
  if request.status >= 200 && request.status < 400
    window.addEventListener 'load', () ->
      for photo in JSON.parse(request.responseText)
        tags = for ziltagging in photo.ziltaggings
          tag = Factory.tag(ziltagging)
          tag.addEventListener 'click', () -> open this.dataset.link
          frag.appendChild tag
          tag
        photo = new Photo images[photo.q], tags
        photos.push photo
        photo.render()
      document.body.appendChild frag
request.send()

window.addEventListener 'resize', render